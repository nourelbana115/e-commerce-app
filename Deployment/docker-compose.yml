version: "3"
services:
  reverseproxy:
      build: 
        context: .
        dockerfile: ./Dockerfile
      container_name: reverseproxy  
      ports:
          - 8080:8080
      restart: always
      depends_on:
        - userManagement
        - filterProducts
        - orders
  userManagement:
    container_name: userManagement  
    build: 
        context: ../UserManagement
        dockerfile: ./Dockerfile
    image: nouali22/user-management    
    environment:
      NODE_ENV: development
      MYSQL_USERNAME: $MYSQL_USERNAME
      MYSQL_PASSWORD: $MYSQL_PASSWORD 
      MYSQL_DB: $MYSQL_DB 
      MYSQL_HOST: mysqldb 
    depends_on:
      - mysqldb
    links:
      - mysqldb  
  filterProducts:
    container_name: filterProducts
    image: nouali22/filter-products    
    build: 
        context: ../FilterProducts
        dockerfile: ./Dockerfile
    environment:
      NODE_ENV: development
      MYSQL_USERNAME: $MYSQL_USERNAME
      MYSQL_PASSWORD: $MYSQL_PASSWORD 
      MYSQL_DB: $MYSQL_DB 
      MYSQL_HOST: mysqldb 
    depends_on:
      - mysqldb
    links:
      - mysqldb  
  orders:
    container_name: orders
    image: nouali22/orders
    build: 
        context: ../OrderProducts
        dockerfile: ./Dockerfile
    environment:
      NODE_ENV: development
      MYSQL_USERNAME: $MYSQL_USERNAME
      MYSQL_PASSWORD: $MYSQL_PASSWORD 
      MYSQL_DB: $MYSQL_DB 
      MYSQL_HOST: mysqldb
    depends_on:
      - mysqldb
    links:
      - mysqldb     
  mysqldb:
    image: mysql
    container_name: mysql
    restart: always
    ports: 
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ecommerce
      MYSQL_HOST: 127.0.0.1
      MYSQL_PASSWORD: root12
      MYSQL_ROOT_PASSWORD: root12
    volumes: 
      - ./ecommercStructreData.sql:/docker-entrypoint-initdb.d/init.sql